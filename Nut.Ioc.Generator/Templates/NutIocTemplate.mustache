using System;
using System.Collections;
using System.Collections.Generic;
{{#Usings}}
using {{.}};
{{/Usings}}

namespace {{Namespace}}.__Autogenerated
{
    [AttributeUsage (AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate)]
    sealed class PreserveAttribute : Attribute
    {
#pragma warning disable 0649
        //
        // Fields
        //
        public bool AllMembers;

        public bool Conditional;
#pragma warning restore 0649
    }
}

namespace {{Namespace}}
{
    using __Autogenerated;

    [Preserve]
    internal class {{ClassName}} : {{&InterfaceName}}
    {
        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public IEnumerator<KeyValuePair<Type, Func<Func<Type, object>, object>>> GetEnumerator()
        {
            {{#ServiceDescriptions}}
            yield return {{{.}}};
            {{/ServiceDescriptions}}
            yield break;
        }
    }
}